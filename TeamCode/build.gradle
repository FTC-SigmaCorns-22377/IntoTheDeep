import com.android.build.gradle.tasks.MergeSourceSetFolders

//
// build.gradle in TeamCode
//
// Most of the definitions for building your module reside in a common, shared
// file 'build.common.gradle'. Being factored in this way makes it easier to
// integrate updates to the FTC into your code. If you really need to customize
// the build definitions, you can place those customizations in this file, but
// please think carefully as to whether such customizations are really necessary
// before doing so.


// Custom definitions may go here

// Include common definitions from above.
apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'
apply plugin: 'kotlin-android'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

repositories {
    maven { url = 'https://jitpack.io' }
    mavenLocal()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/FtC-SigmaCorns-22377/library")
        credentials {
            username = properties.getProperty('username')
            password = properties.getProperty('apiKey')
        }
    }
}

android {


//    defaultConfig {
//        externalNativeBuild {
//            cmake {
//                cppFlags ''
//            }
//        }
//    }
    buildTypes {
        release {

            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")

        }
    }
    namespace = 'org.firstinspires.ftc.teamcode'

    packagingOptions {
        jniLibs.useLegacyPackaging true
    }

    kotlinOptions {
        freeCompilerArgs += "-Xcontext-receivers"
    }

    testOptions {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            freeCompilerArgs += "-Xcontext-receivers"
            jvmTarget = '11'
        }
    }
//    externalNativeBuild {
//        cmake {
//            path file('src/main/cpp/CMakeLists.txt')
//            version '3.22.1'
//        }
//    }
}

tasks.register("buildNativeLib", Exec) {
    workingDir file("src/main/cpp/build")
    commandLine "cmake", "..", "-DCMAKE_BUILD_TYPE=Release"
    doFirst {
        file("src/main/cpp/build").mkdirs()
    }
}

tasks.register("compileNativeLib", Exec) {
    workingDir file("src/main/cpp/build")
    commandLine "cmake", "--build", "."
    dependsOn "buildNativeLib"
}

tasks.withType(Test).configureEach {
    dependsOn "compileNativeLib"

    doFirst {
        def libPath = file("src/main/cpp/build/Debug/").absolutePath
        System.setProperty("java.library.path", libPath)
    }
}

project.afterEvaluate {
    tasks.withType(Test).configureEach {
        //TODO: FIX THIS TO BE RELATIVE
        it.systemProperty("java.library.path","C:\\Users\\chemi\\Documents\\dev\\library\\library\\build\\rustJniLibs\\desktop\\win32-x86-64")
    }
}

dependencies {
    implementation project(':FtcRobotController')
    implementation 'com.github.Eeshwar-Krishnan:PhotonFTC:v3.0.2-ALPHA'
    implementation ("net.unnamedrobotics:library:1.0.29r@aar")
    implementation 'dev.nullrobotics:choreolib:0.04'
    implementation("org.jetbrains.kotlin:kotlin-reflect:1.6.0")
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'
    implementation "org.joml:joml:1.10.8"

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'com.github.kwhat:jnativehook:2.2.2'
    testImplementation 'com.github.strikerx3:jxinput:1.0.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}